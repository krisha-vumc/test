name: "Terraform Test"
on:
  pull_request:
    branches:
      - main
      - deploy/dev
      - deploy/staging
  push:
    branches:
      - main
      - deploy/dev
      - deploy/staging

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      directory: ${{ steps.check_dir.outputs.directory }}
    name: Pull Request Check
    steps:
    - name: Get list of changed files
      id: files
      uses: jitterbit/get-changed-files@v1
    - name: check
      id: check_dir
      run: |
        echo "File Changed : ${{ steps.files.outputs.all }}"
        declare -a arrVar
        for changed_file in ${{ steps.files.outputs.all }}; do
          echo "Do something with this ${changed_file}."
          if [[ $changed_file =~ ".tf" ]]; then
            DIRchanged=`echo ${changed_file} | grep -o '^.*/'`
            arrVar=( "${arrVar[@]}" $DIRchanged )
            echo $DIRchanged
          fi

        done
        #echo ${arrVar[@]} | tr [:space:] '\n' | awk '!a[$0]++'
        newArray=($(printf "%s\n" "${arrVar[@]}" | sort -u))
        echo "Unique directory:"
        SERVICES=`printf '%s\n' "${newArray[@]}" | jq -R . | jq -s .`
        echo $SERVICES
        echo "::set-output name=directory::${newArray[@]}"
        
  build:
    runs-on: ubuntu-latest
    needs: terraform
    # if services is empty, the build job is skipped
    if: "join(fromJSON(needs.terraform.check_dir.outputs.directory), '') != ''"
    strategy:
      matrix:
        directory: ${{fromJSON(needs.terraform.check_dir.outputs.directory)}}
    steps:
      - uses: actions/checkout@v2
      - name: test service (${{ matrix.directory }})
        run: |
          echo "${{ matrix.directory}}"
          